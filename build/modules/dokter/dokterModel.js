const connection = require("../../config/mysql");
module.exports = {
  getAllDokter: (limit, offset, search, sort) => new Promise((resolve, reject) => {
    connection.query(`SELECT * FROM data_dokter WHERE nama_dokter LIKE '%${search}%' ORDER BY ${sort} LIMIT ? OFFSET ?`, [limit, offset], (err, result) => {
      if (!err) {
        resolve(result);
      } else {
        reject(new Error(`SQL : ${err.sqlMessage}`));
      }
    });
  }),
  getCountDokter: search => new Promise((resolve, reject) => {
    connection.query(`SELECT COUNT(*) AS total FROM data_dokter WHERE nama_dokter LIKE '%${search}%'`, (err, result) => {
      if (!err) {
        resolve(result[0].total);
      } else {
        reject(new Error(`SQL : ${err.sqlMessage}`));
      }
    });
  }),
  postDokter: data => new Promise((resolve, reject) => {
    const query = connection.query("INSERT INTO data_dokter SET ?", data, (error, result) => {
      if (!error) {
        const newResult = {
          id: result.insertId,
          ...data
        };
        resolve(newResult);
      } else {
        reject(new Error(`SQL : ${error.sqlMessage}`));
      }
    });
    // eslint-disable-next-line no-console
    console.log(query.sql);
  })
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25uZWN0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRBbGxEb2t0ZXIiLCJsaW1pdCIsIm9mZnNldCIsInNlYXJjaCIsInNvcnQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInF1ZXJ5IiwiZXJyIiwicmVzdWx0IiwiRXJyb3IiLCJzcWxNZXNzYWdlIiwiZ2V0Q291bnREb2t0ZXIiLCJ0b3RhbCIsInBvc3REb2t0ZXIiLCJkYXRhIiwiZXJyb3IiLCJuZXdSZXN1bHQiLCJpZCIsImluc2VydElkIiwiY29uc29sZSIsImxvZyIsInNxbCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2R1bGVzL2Rva3Rlci9kb2t0ZXJNb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25uZWN0aW9uID0gcmVxdWlyZShcIi4uLy4uL2NvbmZpZy9teXNxbFwiKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGdldEFsbERva3RlcjogKGxpbWl0LCBvZmZzZXQsIHNlYXJjaCwgc29ydCkgPT5cclxuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgY29ubmVjdGlvbi5xdWVyeShcclxuICAgICAgICBgU0VMRUNUICogRlJPTSBkYXRhX2Rva3RlciBXSEVSRSBuYW1hX2Rva3RlciBMSUtFICclJHtzZWFyY2h9JScgT1JERVIgQlkgJHtzb3J0fSBMSU1JVCA/IE9GRlNFVCA/YCxcclxuICAgICAgICBbbGltaXQsIG9mZnNldF0sXHJcbiAgICAgICAgKGVyciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICBpZiAoIWVycikge1xyXG4gICAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBTUUwgOiAke2Vyci5zcWxNZXNzYWdlfWApKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICk7XHJcbiAgICB9KSxcclxuXHJcbiAgZ2V0Q291bnREb2t0ZXI6IChzZWFyY2gpID0+XHJcbiAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkoXHJcbiAgICAgICAgYFNFTEVDVCBDT1VOVCgqKSBBUyB0b3RhbCBGUk9NIGRhdGFfZG9rdGVyIFdIRVJFIG5hbWFfZG9rdGVyIExJS0UgJyUke3NlYXJjaH0lJ2AsXHJcbiAgICAgICAgKGVyciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICBpZiAoIWVycikge1xyXG4gICAgICAgICAgICByZXNvbHZlKHJlc3VsdFswXS50b3RhbCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBTUUwgOiAke2Vyci5zcWxNZXNzYWdlfWApKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICk7XHJcbiAgICB9KSxcclxuXHJcbiAgICBwb3N0RG9rdGVyOiAoZGF0YSkgPT5cclxuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgY29uc3QgcXVlcnkgPSBjb25uZWN0aW9uLnF1ZXJ5KFxyXG4gICAgICAgIFwiSU5TRVJUIElOVE8gZGF0YV9kb2t0ZXIgU0VUID9cIixcclxuICAgICAgICBkYXRhLFxyXG4gICAgICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICBpZiAoIWVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1Jlc3VsdCA9IHtcclxuICAgICAgICAgICAgICBpZDogcmVzdWx0Lmluc2VydElkLFxyXG4gICAgICAgICAgICAgIC4uLmRhdGEsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJlc29sdmUobmV3UmVzdWx0KTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFNRTCA6ICR7ZXJyb3Iuc3FsTWVzc2FnZX1gKSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICBjb25zb2xlLmxvZyhxdWVyeS5zcWwpO1xyXG4gICAgfSksXHJcblxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLG9CQUFvQixDQUFDO0FBRWhEQyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmQyxZQUFZLEVBQUUsQ0FBQ0MsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsSUFBSSxLQUN4QyxJQUFJQyxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDL0JYLFVBQVUsQ0FBQ1ksS0FBSyxDQUNiLHNEQUFxREwsTUFBTyxlQUFjQyxJQUFLLG1CQUFrQixFQUNsRyxDQUFDSCxLQUFLLEVBQUVDLE1BQU0sQ0FBQyxFQUNmLENBQUNPLEdBQUcsRUFBRUMsTUFBTSxLQUFLO01BQ2YsSUFBSSxDQUFDRCxHQUFHLEVBQUU7UUFDUkgsT0FBTyxDQUFDSSxNQUFNLENBQUM7TUFDakIsQ0FBQyxNQUFNO1FBQ0xILE1BQU0sQ0FBQyxJQUFJSSxLQUFLLENBQUUsU0FBUUYsR0FBRyxDQUFDRyxVQUFXLEVBQUMsQ0FBQyxDQUFDO01BQzlDO0lBQ0YsQ0FBQyxDQUNGO0VBQ0gsQ0FBQyxDQUFDO0VBRUpDLGNBQWMsRUFBR1YsTUFBTSxJQUNyQixJQUFJRSxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDL0JYLFVBQVUsQ0FBQ1ksS0FBSyxDQUNiLHNFQUFxRUwsTUFBTyxJQUFHLEVBQ2hGLENBQUNNLEdBQUcsRUFBRUMsTUFBTSxLQUFLO01BQ2YsSUFBSSxDQUFDRCxHQUFHLEVBQUU7UUFDUkgsT0FBTyxDQUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUNJLEtBQUssQ0FBQztNQUMxQixDQUFDLE1BQU07UUFDTFAsTUFBTSxDQUFDLElBQUlJLEtBQUssQ0FBRSxTQUFRRixHQUFHLENBQUNHLFVBQVcsRUFBQyxDQUFDLENBQUM7TUFDOUM7SUFDRixDQUFDLENBQ0Y7RUFDSCxDQUFDLENBQUM7RUFFRkcsVUFBVSxFQUFHQyxJQUFJLElBQ2pCLElBQUlYLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sS0FBSztJQUMvQixNQUFNQyxLQUFLLEdBQUdaLFVBQVUsQ0FBQ1ksS0FBSyxDQUM1QiwrQkFBK0IsRUFDL0JRLElBQUksRUFDSixDQUFDQyxLQUFLLEVBQUVQLE1BQU0sS0FBSztNQUNqQixJQUFJLENBQUNPLEtBQUssRUFBRTtRQUNWLE1BQU1DLFNBQVMsR0FBRztVQUNoQkMsRUFBRSxFQUFFVCxNQUFNLENBQUNVLFFBQVE7VUFDbkIsR0FBR0o7UUFDTCxDQUFDO1FBQ0RWLE9BQU8sQ0FBQ1ksU0FBUyxDQUFDO01BQ3BCLENBQUMsTUFBTTtRQUNMWCxNQUFNLENBQUMsSUFBSUksS0FBSyxDQUFFLFNBQVFNLEtBQUssQ0FBQ0wsVUFBVyxFQUFDLENBQUMsQ0FBQztNQUNoRDtJQUNGLENBQUMsQ0FDRjtJQUNEO0lBQ0FTLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDZCxLQUFLLENBQUNlLEdBQUcsQ0FBQztFQUN4QixDQUFDO0FBRUwsQ0FBQyJ9